# Read the data from Lee's file : https://osf.io/ey9vp/wiki/home/

import pandas as pd
import numpy as np
from scipy.io import loadmat

data = loadmat('risks.mat')   #load data and create a dictionary of numpy arrays
    
headers = data.keys()

s = data['s']          # s : nxn symmetric matrix of normalized pairwise similarities between the objects
d = data['d']          # d : nxn symmetric matrix of normalized pairwise proximities between the objects
labs = data['labs']    # labs : string array of labels for the objects
n = data['n'][0][0]    # n : number of objects 
if 'sigma_emp' in headers : 
    sigma_emp = data['sigma_emp'][0][0]    # sigma_emp : an empirical estimate of the precision of the similarity and proximity data
 
new_labs = [item.replace(" ","") for item in list(labs)]       # the labels of the data as a list 
sim = pd.DataFrame(s, columns = new_labs , index = new_labs)   # similarity matrix as dataframe
dist = pd.DataFrame(d, columns = new_labs , index = new_labs)  # proximity matrix as dataframe

sim_add_dist = sim.add(dist, fill_value=0)  # check if sim + dist == 1, that is if transformation function is 'sum'. 
